#!/usr/bin/bash
# SPDX-License-Identifier: GPL-3.0
set -Eeuo pipefail
trap 'errorHandler "$?" "${FUNCNAME[0]}" "$LINENO"' ERR

error() {
    echo -e "\e[0;31m[ERROR] $*\e[0m" >&2
}

die() {
    error "$*"
    exit 1
}

log() {
    echo -e "\e[0;32m$*\e[0m" >&2
}

errorHandler() {
    echo -e "\e[0;31m[BUG] Line $3 ($2): $1\e[0m" >&2
    exit "$1"
}

getPkgDir() {
    local path
    path="$(find . -mindepth 2 -maxdepth 2 -type d -name "$1" -print -quit)"
    echo "${path#./}"
}

getPkgVer() {
    (
        # shellcheck source=/dev/null
        source "$1"/spec
        echo "$VER"
    )
}

copyPackage() {
    local fromPac="$1" newPac="$2"
    local pkgSection
    pkgSection="$(dirname "$(getPkgDir "$1")")"
    local pkgVer
    pkgVer="$(getPkgVer "$pkgSection/$1")"

    if ! [[ -e "$pkgSection/$fromPac" ]]; then
        error "[$1] Source package does not exist"
        return 1
    fi
    if [[ -e "$pkgSection/$newPac" ]]; then
        error "[$2] New package already exists"
        return 1
    fi

    log "[$1 -> $2] Creating package ..."
    cp -r "$pkgSection/$fromPac" "$pkgSection/$newPac"
    perl -i -pe "s/^PKGNAME=.+\n/PKGNAME=$newPac\n/g" "$pkgSection/$newPac/autobuild/defines" || true
    perl -i -pe "s/^PKGEPOCH=\d+\n//g" "$pkgSection/$newPac/autobuild/defines" || true

    log "[$1 -> $2] Committing ..."
    git add "$pkgSection/$newPac"
    git commit -m "$newPac: new, $pkgVer" \
        --trailer X-AOSC-copypac-from="$fromPac" \
        --trailer X-AOSC-copypac-version="$pkgVer" \
        --trailer X-AOSC-copypac-section="$pkgSection" \
        -- "$pkgSection/$newPac"

    local commitLog
    commitLog="$(git -c core.abbrev=16 \
        log HEAD \
        --oneline -1 --no-decorate --color=always)"
    log "[$1 -> $2] $commitLog"

    log "[$1 -> $2] SUCCESS"
}

if [[ $# != 2 ]]; then
    cat <<EOF
Usage: $0 <FROM PACKAGE> <NEW PACKAGE>
EOF
    exit
fi

if ! copyPackage "$1" "$2"; then
    error "[$1 -> $2] FAILED"
fi
