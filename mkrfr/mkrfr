#!/usr/bin/bash
# SPDX-License-Identifier: GPL-3.0
set -Eeuo pipefail
trap 'errorHandler "$?" "${FUNCNAME[0]}" "$LINENO"' ERR

error() {
    echo -e "\e[0;31m[ERROR] $*\e[0m" >&2
}

warn() {
    echo -e "\e[0;33m[WARN ] $*\e[0m" >&2
}

die() {
    error "$*"
    exit 1
}

log() {
    echo -e "\e[0;32m$*\e[0m" >&2
}

errorHandler() {
    echo -e "\e[0;31m[BUG] Line $3 ($2): $1\e[0m" >&2
    exit "$1"
}

result=""

while read -r pr; do
    number="$(jq -r '.number' <<<"$pr")"
    title="$(jq -r '.title' <<<"$pr")"
    url="$(jq -r '.url' <<<"$pr")"

    buildCount="$(jq -r '.statusCheckRollup | length' <<<"$pr")"
    if ((buildCount == 0)); then
        warn "PR $number ($title) has not been built by BuildIt!"
    fi
    buildFailCount="$(jq -r '.statusCheckRollup | map(select(.conclusion != "SUCCESS")) | length' <<<"$pr")"
    if ((buildFailCount != 0)); then
        warn "PR $number ($title) has some failed build jobs"
    fi
    reviewCount="$(jq -r '.latestReviews | length' <<<"$pr")"
    if ((reviewCount != 0)); then
        log "PR $number ($title) already has latest reviews"
        continue
    fi

    title="${title/: update to / }"
    log "Adding: PR $number ($title)"
    result+="$number ($title) $url
"
done < <(
    gh pr list --repo 'AOSC-Dev/aosc-os-abbs' --author '@me' --search 'is:open draft:false comments:>=1 -label:flight -label:preview -label:pre-release -label:blocked' --json 'number,url,title,statusCheckRollup,latestReviews' | jq -ac '.[]'
)

printf 'RFR:\n'
echo -n "$result" | sort
